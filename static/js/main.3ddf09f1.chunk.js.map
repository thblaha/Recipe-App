{"version":3,"sources":["components/DetailView.js","index.js"],"names":["DetailView","props","react_default","a","createElement","className","recipe","icon","name","ingredients","map","ingredient","instructions","instruction","SearchForm","value","searchVal","placeholder","onChange","handleChange","onClick","selectRecipes","DirectoryView","src_SearchForm","recipes","src_RecipeCard","handleClick","RecipeCard","App","state","selectedRecipes","id","selectedRecipe","event","preventDefault","matchingRecipes","_this","filter","toLowerCase","includes","setState","target","index_es","faCircle","color","size","faUtensils","src_DirectoryView","this","components_DetailView","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3ddf09f1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DetailView = props => (\n  <div className=\"detail-view\">\n    <div className=\"recipe-name\">\n      <span className=\"recipe-icon\">{props.recipe.icon}</span>\n      {' '}\n      {props.recipe.name}\n    </div>\n    <div className=\"wrapper\">\n      <div>\n        <div className=\"title-ingredients\">Ingredients</div>\n        {props.recipe.ingredients.map(ingredient => (\n          <div className=\"recipe-ingredient\">{ingredient}</div>\n        ))}\n      </div>\n      <div>\n        <div className=\"title-instructions\">Instructions</div>\n        {props.recipe.instructions.map(instruction => (\n          <div className=\"recipe-instruction\">{instruction}</div>)\n        )}\n      </div>\n    </div>\n  </div>)\n\nexport default DetailView;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils, faStroopwafel, faCircle } from '@fortawesome/free-solid-svg-icons'\nimport DetailView from \"./components/DetailView\";\nimport './index.css';\n\n// const DetailView = props => (\n//   <div>\n//     <div>{props.recipe.name}</div>\n//     <div>{props.recipe.ingredients}</div>\n//     <div>{props.recipe.instructions}</div>\n//   </div>)\n\nconst SearchForm = props => (\n  <form>\n    <input value={props.searchVal} placeholder=\"Search text here\" onChange={props.handleChange} />\n    <button onClick={props.selectRecipes}>Search</button>\n  </form>\n);\n\nconst DirectoryView = props => (\n  <div className=\"directory-view\">\n    <SearchForm\n      searchVal={props.searchVal}\n      handleChange={props.handleChange}\n      selectRecipes={props.selectRecipes}\n    />\n    {props.recipes.map(recipe => (\n      <RecipeCard name={recipe.name} handleClick={() => props.handleClick(recipe)} />\n    ))}\n\n  </div>\n);\n\nconst RecipeCard = props => (\n  <div className=\"recipe-card\" onClick={props.handleClick}>\n    {props.name}\n  </div>\n);\n\nclass App extends React.Component {\n  state = {\n    selectedRecipes: [],\n    recipes: [\n      {\n        id: 1,\n        icon: \"üçó\",\n        name: \"turkey + stuff\",\n        ingredients: [\"turkey\", \"mustard\", \"greens\", \"celery\", \"potato\"],\n        instructions: [\n          \"pre-heat over to 350\",\n          \"tickle the turkey\",\n          \"cut some celery\"\n        ]\n      },\n\n      {\n        id: 2,\n        icon: \"ü•û\",\n        name: \"waffles\",\n        ingredients: [\"waffle mix\", \"oil\", \"eggs\"],\n        instructions: [\n          \"preheat waffle iron\",\n          \"mix ingredients together\",\n          \"pour into waffle iron\",\n          \"open after 10 minutes\"\n        ]\n      },\n      {\n\n        id: 3,\n        icon: 'üç§',\n        name: \"Shrimp Scampi\",\n        ingredients: [\"pasta, garlic, butter, creole seasoning\"],\n        instructions: [\n          \"Boil pasta, cook shrimp, and saute for 3 min in garlic butter\"\n        ]\n      },\n      {\n        id: 4,\n        icon: 'üç§',\n        name: \"Shrimps Delicious\",\n        ingredients: [\"Love potion, magic\"],\n        instructions: [\"Cook the shrimp in the love potion\"]\n      },\n      {\n        id: 5,\n        icon: 'üçë',\n        name: \"Fish Tacos\",\n        ingredients: [\n          \"fish\",\n          \"tortillas\",\n          \"onions\",\n          \"bellpeppers\",\n          \"guacamole\"\n        ],\n        instructions: [\"cook and eat\"]\n      },\n      {\n        id: 6,\n        icon: \"üçç\",\n        name: \"Pineapple Upside Down Cake\",\n        ingredients: [\"pineapple\", \"butter\", \"milk\", \"cakemix\", \"eggs\"],\n        instructions: [\"bake and eat\"]\n      },\n      {\n        id: 1000,\n        icon: \"üç•\",\n        name: \"Ceviche\",\n        ingredients: [\n          \"tilapia\",\n          \"cilantro\",\n          \"tomatoes\",\n          \"yellow onion\",\n          \"limes\",\n          \"jalapeno\",\n          \"salt\"\n        ],\n        instructions: [\n          \"Dice all tilapia and place in a bowl.\",\n          \"Squeeze lime juice over all the tilapia (enough to cover it) and add salt.\",\n          \"Let the tilapia sit in lime juice for about 2 hrs.\",\n          \"Dice all other ingredients and set aside.\",\n          \"After 2 hrs, mix tilapia and diced ingredients.\",\n          \"Enjoy with tortilla chips or tostadas :)\"\n        ]\n      },\n      {\n        id: 7,\n        icon: 'ü¶É',\n        name: \"Turkey Mayhem\",\n        ingredients: [\"Turkey\", \"Mustard\", \"Greens\", \"Celery\", \"Potato\"],\n        instructions: [\n          \"Pre-heat over to 350 degrees\",\n          \"Tickle the turkey\",\n          \"Cut some celery\"\n        ]\n      },\n      {\n        id: 8,\n        icon: \"üßÄ\",\n        name: \"Mac and Cheese\",\n        ingredients: [\"Mac\", \"Cheese\"],\n        instructions: [\n          \"Put the mac in the cheese\",\n          \"Swish it around\",\n          \"Bake for 15 minutes at 350 degrees\"\n        ]\n      },\n      {\n        id: 9,\n        icon: \"ü•£\",\n        name: \"Spanakopita\",\n        ingredients: [\"Olive oil\", \"Onion\", \"Garlic\", \"Spinach\"],\n        instructions: [\"Put the stuff in a bowl.\", \"Cook the stuff.\"]\n      },\n      {\n        id: 10,\n        icon: 'üç∞',\n        name: \"Vasilopita\",\n        ingredients: [\"Flower\", \"Baking Soda\", \"Butter\", \"Sugar\", \"Eggs\"],\n        instructions: [\n          \"Throw everything in the air and hope it comes together.\",\n          \"Knead the bread.\",\n          \"Show the bread some love.\",\n          \"Bake it at 400 degrees\"\n        ]\n      },\n      {\n        id: 11,\n        icon: \"üö∞\",\n        name: \"Potable Water\",\n        ingredients: [\"water\"],\n        instructions: [\n          \"Put the water in a pot and heat to boiling. Cool before enjoying!\"\n        ]\n      },\n      {\n        id: 12,\n        icon: \"ü•É\",\n        name: \"Hennessy + Sprite\",\n        ingredients: [\"Hennessy, Sprite, ice cubes\"],\n        instructions: [\n          \"Pour 2 oz of Very Special Hennessy over ice and top with desired amount of Sprite. Delicious.\"\n        ]\n      },\n      {\n        id: 13,\n        icon: \"üç¨\",\n        name: \"Candy Surprise\",\n        ingredients: [\"Corn syrup, food coloring, carageenan\"],\n        instructions: [\n          \"Heat everything until it is sticky and swirly, then put it in the freezer.Look at it later and maybe try it.\"\n        ]\n      },\n      {\n        id: 15,\n        icon: \"üçù\",\n        name: \"Spaghetti Marinara\",\n        ingredients: [\"Dry spaghetti noodles, jar of your favorite pasta sauce\"],\n        instructions: [\n          \"Heat salted water until boiling. Add pasta and cook until al dente. Drain and serve with your favorite pasta sauce.\"\n        ]\n      },\n\n    ],\n    searchVal: \"\",\n    selectedRecipe: { ingredients: [], instructions: [] }\n  };\n  selectRecipes = event => {\n    event.preventDefault();\n    const matchingRecipes = this.state.recipes.filter(\n      recipe => recipe.name.toLowerCase().includes(this.state.searchVal.toLowerCase())\n    );\n    this.setState({ selectedRecipes: matchingRecipes })\n  }\n\n  handleChange = event => {\n    this.setState({ searchVal: event.target.value });\n  };\n\n  handleClick = recipe => {\n    this.setState({ selectedRecipe: recipe });\n  };\n\n  render() {\n    return (\n      <div className=\"page-body\">\n        <span>\n          <header>\n            <span className=\"fa-layers fa-fw\">\n              <FontAwesomeIcon icon={faCircle} color=\"white\" size=\"lg\" />\n              <FontAwesomeIcon icon={faUtensils} color=\"lightseagreen\" />\n            </span>\n            {' '}\n            Recipe App\n        </header>\n        </span>\n        <div className=\"wrapper\">\n          <DirectoryView\n            recipes={this.state.selectedRecipes}\n            searchVal={this.state.searchVal}\n            handleChange={this.handleChange}\n            selectRecipes={this.selectRecipes}\n            handleClick={this.handleClick}\n          />\n          <DetailView recipe={this.state.selectedRecipe} />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}